#!/sbin/openrc-run

RSYNCC_PID=/var/run/rsyncc.pid
RSYNCD_PID=/var/run/rsyncd.pid

_pid1env() {
	xargs -n 1 -0 < /proc/1/environ | grep "^$1=" | cut -d= -f2
}

RSYNC_SERVER=$(_pid1env RSYNC_SERVER)
RSYNC_FOLDERS=$(_pid1env RSYNC_FOLDERS)
RSYNC_STIME=$(_pid1env RSYNC_STIME)

_setup() {
	ebegin "Setting up environment for rsync"
	getent group nogroup > /dev/null || addgroup nogroup
	getent passwd nouser > /dev/null || adduser -D -H -G nogroup nouser
	[ -d "/rsync/data" ] || mkdir -p "/rsync/data"
	chown -R nouser:nogroup "/rsync"
}

_sync() {
	# Running in client mode
	while true; do
		for dir in ${RSYNC_FOLDERS//,/}; do
			rsync -aEzim --delete --timeout 10 rsync://rsync-manager/rsync/data/$dir /rsync/data/
		done
		sleep ${RSYNC_STIME}
	done
}

depend() {
	use net
	after firewall
}

start_pre() {
	_setup
	if [ "$RSYNC_SERVER" != "true" ]; then
		ebegin "Starting rsync-client"
		_sync &
		echo $! > $RSYNCC_PID
	fi
	return $?
}

start() {
	ebegin "Starting rsyncd ($RSYNC_SERVER)"
	if [ "$RSYNC_SERVER" = "true" ]; then
		start-stop-daemon --start --exec /usr/bin/rsync \
			--pidfile $RSYNCD_PID \
			-- --daemon ${RSYNC_OPTS}
	fi
	eend $?
}

stop_pre() {
	ebegin "Stopping rsync-client"
	if [ -f "$RSYNCC_PID" -a -f /proc/$(cat "$RSYNCC_PID")/stat ]; then
		kill $RSYNCC_PID
	fi
	return $?
}

stop() {
	ebegin "Stopping rsyncd"
	if [ "$RSYNC_SERVER" = "true" ]; then
		start-stop-daemon --stop --exec /usr/bin/rsync \
			--pidfile $RSYNCD_PID
	fi
	eend $?
}
